import{_ as n,V as s,W as a,$ as t}from"./framework-7d796c00.js";const p={},e=t(`<h1 id="react组件封装" tabindex="-1"><a class="header-anchor" href="#react组件封装" aria-hidden="true">#</a> react组件封装</h1><h2 id="水印组件封装" tabindex="-1"><a class="header-anchor" href="#水印组件封装" aria-hidden="true">#</a> 水印组件封装</h2><p>使用Canvas 生成水印，并使用 MutationObserve （可以监听DOM结构变化的接口）监视 DOM 的变动，使得水印不可被删除、且属性不可被修改</p><p>源码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> watermark <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../utils/watermark&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">WaterMark</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>container <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">componentDidMount</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> style<span class="token punctuation">,</span> <span class="token operator">...</span>options <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token function">watermark</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">,</span>
      <span class="token operator">...</span>options<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>style<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container <span class="token operator">=</span> el<span class="token punctuation">}</span> id<span class="token operator">=</span><span class="token string">&quot;watermark&quot;</span> style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>watermark方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">watermark</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    container <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token comment">// 容器</span>
    width <span class="token operator">=</span> <span class="token string">&#39;300&#39;</span><span class="token punctuation">,</span> <span class="token comment">// canvas元素宽</span>
    height <span class="token operator">=</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span> <span class="token comment">// canvas元素高</span>
    textAlign <span class="token operator">=</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文字对齐</span>
    textBaseline <span class="token operator">=</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 基准线</span>
    font <span class="token operator">=</span> <span class="token string">&#39;16px Microsoft Yahei&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 字体大小及样式</span>
    fillStyle <span class="token operator">=</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 自定义水印的颜色</span>
    content <span class="token operator">=</span> <span class="token string">&#39;内部文档，请勿外传&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 水印内容</span>
    globalAlpha <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment">// 设置图形和图像透明度的值</span>
    rotate <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token comment">// 文字旋转角度</span>
    zIndex <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 元素堆叠顺序</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>

  <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">,</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span>
  canvas<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取 canvas2d 上下文</span>
  ctx<span class="token punctuation">.</span>globalAlpha <span class="token operator">=</span> globalAlpha<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>textAlign <span class="token operator">=</span> textAlign<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> textBaseline<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> font<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> fillStyle<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> rotate<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> base64Url <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回一个包含图片展示的 data URI</span>

  <span class="token keyword">const</span> __wm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.__wm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//选择器</span>
  <span class="token keyword">const</span> watermarkDiv <span class="token operator">=</span> __wm <span class="token operator">||</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> styleStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    position:absolute;
    top:0px;
    left:0px;
    width:100%;
    height:100%;
    z-index:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>zIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
    pointer-events:none;
    background-repeat:repeat;
    background-image:url(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>base64Url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  watermarkDiv<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> styleStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  watermarkDiv<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;__wm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为元素添加“__wm”类名</span>

  container<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__wm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>watermarkDiv<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加元素</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> MutationObserver <span class="token operator">=</span> window<span class="token punctuation">.</span>MutationObserver <span class="token operator">||</span> window<span class="token punctuation">.</span>WebKitMutationObserver<span class="token punctuation">;</span>
  <span class="token comment">// 检查浏览器是否支持这个API</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>MutationObserver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> args <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> mo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> __wm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.__wm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 只在__wm元素变动才重新调用</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__wm <span class="token operator">&amp;&amp;</span> __wm<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> styleStr<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>__wm <span class="token operator">||</span> container<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">!==</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 避免一直触发</span>
        mo<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token function">watermark</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mo<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 观察目标节点的属性节点</span>
      <span class="token literal-property property">subtree</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 观察目标节点的所有后代节点</span>
      <span class="token literal-property property">childList</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 观察目标节点的子节点</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用MutationObserve ，当水印组件被删除、属性被修改或水印组件的容器定位属性 position 不为 relative时，会重新调用watermark方法</p><p>MutationObserver给开发者们提供了一种能在某个范围内的DOM树发生变化时作出适当反应的能力</p>`,9),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","react-canvas.html.vue"]]);export{r as default};
